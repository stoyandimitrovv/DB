CREATE DATABASE Airport

GO

USE Airport

GO

--Problem 1
CREATE TABLE Passengers(
	Id INT PRIMARY KEY IDENTITY,
	FullName VARCHAR(100) UNIQUE NOT NULL,
	Email VARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE Pilots(
	Id INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(30) UNIQUE NOT NULL,
	LastName VARCHAR(30) UNIQUE NOT NULL,
	Age TINYINT NOT NULL CHECK(Age BETWEEN 21 AND 62),
	Rating FLOAT CHECK(Rating BETWEEN 0.0 AND 10.0)
)

CREATE TABLE AircraftTypes(
	Id INT PRIMARY KEY IDENTITY,
	TypeName VARCHAR(30) UNIQUE NOT NULL
)

CREATE TABLE Aircraft(
	Id INT PRIMARY KEY IDENTITY,
	Manufacturer VARCHAR(25) NOT NULL,
	Model VARCHAR(30) NOT NULL,
	[Year] INT NOT NULL,
	FlightHours INT,
	Condition CHAR(1) NOT NULL,
	TypeId INT NOT NULL FOREIGN KEY REFERENCES AircraftTypes(Id)
)

CREATE TABLE PilotsAircraft(
	AircraftId INT NOT NULL FOREIGN KEY REFERENCES Aircraft(Id),
	PilotId INT NOT NULL FOREIGN KEY REFERENCES Pilots(Id),
	PRIMARY KEY(AircraftId, PilotId)
)

CREATE TABLE Airports(
	Id INT PRIMARY KEY IDENTITY,
	AirportName VARCHAR(70) UNIQUE NOT NULL,
	Country VARCHAR(100) UNIQUE NOT NULL
)

CREATE TABLE FlightDestinations(
	Id INT PRIMARY KEY IDENTITY,
	AirportId INT NOT NULL FOREIGN KEY REFERENCES Airports(Id),
	[Start] DATETIME NOT NULL,
	AircraftId INT NOT NULL FOREIGN KEY REFERENCES Aircraft(Id),
	PassengerId INT NOT NULL FOREIGN KEY REFERENCES Passengers(Id),
	TicketPrice DECIMAL(18, 2) DEFAULT 15 NOT NULL
)

--Problem 2
INSERT INTO Passengers(FullName, Email)
	VALUES
('Krystal Cuckson', 'KrystalCuckson@gmail.com'),
('Susy Borrel', 'SusyBorrel@gmail.com'),
('Saxon Veldman', 'SaxonVeldman@gmail.com'),
('Lenore Romera', 'LenoreRomera@gmail.com'),
('Enrichetta Jeremiah', 'EnrichettaJeremiah@gmail.com'),
('Delaney Stove', 'DelaneyStove@gmail.com'),
('Ilaire Tomaszewicz', 'IlaireTomaszewicz@gmail.com'),
('Genna Jaquet', 'GennaJaquet@gmail.com'),
('Carlotta Dykas', 'CarlottaDykas@gmail.com'),
('Viki Oneal', 'VikiOneal@gmail.com'),
('Anthe Larne', 'AntheLarne@gmail.com')

--Problem 3
UPDATE Aircraft
   SET Condition = 'A' 
 WHERE (Condition = 'C' OR Condition = 'B') AND (FlightHours IS NULL OR FlightHours <= 100) AND ([Year] >= 2013)

--Problem 4
DELETE FROM Passengers
      WHERE LEN(FullName) <= 10

--Problem 5
  SELECT Manufacturer,
         Model,
		     FlightHours,
		     Condition
    FROM Aircraft
ORDER BY FlightHours DESC

--Problem 6
  SELECT p.FirstName,
         p.LastName,
	       a.Manufacturer,
	       a.Model,
	       a.FlightHours
    FROM Pilots AS p
    JOIN PilotsAircraft AS pa ON p.Id = pa.PilotId
    JOIN Aircraft AS a ON pa.AircraftId = a.Id
   WHERE FlightHours IS NOT NULL AND FlightHours < 304 
ORDER BY a.FlightHours DESC, p.FirstName

--Problem 7
SELECT TOP(20) f.Id,
               f.[Start],
			         p.FullName,
			         a.AirportName,
			         f.TicketPrice
          FROM FlightDestinations AS f
          JOIN Passengers AS p ON f.PassengerId = p.Id
          JOIN Airports AS a ON f.AirportId = a.Id
         WHERE DAY(f.[Start]) % 2 = 0
      ORDER BY f.TicketPrice DESC, a.AirportName

--Problem 8
  SELECT a.Id,
         a.Manufacturer,
	       a.FlightHours,
	       COUNT(f.Id) AS FlightDestinationsCount,
	       ROUND(AVG(f.TicketPrice), 2) AS AvgPrice
    FROM Aircraft AS a
    JOIN FlightDestinations AS f ON a.Id = f.AircraftId
GROUP BY a.Id, a.Manufacturer, a.FlightHours
  HAVING COUNT(f.Id) >= 2
ORDER BY FlightDestinationsCount DESC, a.Id

--Problem 9
  SELECT p.FullName,
         COUNT(f.AircraftId) AS CountOfAircraft,
         SUM(f.TicketPrice) AS TotalPayed
    FROM Passengers AS p
    JOIN FlightDestinations AS f ON p.Id = f.PassengerId
   WHERE p.FullName LIKE '_a%'
GROUP BY p.FullName
  HAVING COUNT(f.AircraftId) > 1
ORDER BY p.FullName

--Problem 10
  SELECT a.AirportName,
         f.[Start],
	       f.TicketPrice,
	       p.FullName,
	       ai.Manufacturer,
	       ai.Model
    FROM FlightDestinations AS f
    JOIN Airports AS a ON f.AirportId = a.Id
    JOIN Passengers AS p ON f.PassengerId = p.Id
    JOIN Aircraft AS ai ON f.AircraftId = ai.Id
   WHERE CAST(f.[Start] as time) >= '6:00' AND CAST(f.[Start] as time) <= '20:00' AND f.TicketPrice > 2500
ORDER BY ai.Model

GO
--Problem 11
CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50)) 
RETURNS INT
AS
BEGIN
	DECLARE @numberOfFlights INT = (
	                                 SELECT COUNT(f.Id)
									                 FROM Passengers AS p
									                 JOIN FlightDestinations AS f ON p.Id = f.PassengerId
									                 WHERE p.Email = @email
	                               )
	RETURN @numberOfFlights
END

GO

--Problem 12
CREATE PROC usp_SearchByAirportName @airportName VARCHAR(70)
AS
BEGIN
	  SELECT a.AirportName,
	         p.FullName,
		       CASE 
           WHEN f.TicketPrice <= 400 THEN 'Low'
           WHEN f.TicketPrice BETWEEN 401 AND 1500 THEN 'Medium'
           WHEN f.TicketPrice >=1501 THEN 'High'
           END AS LevelOfTickerPrice,
		       ai.Manufacturer,
		       ai.Condition,
		       [at].TypeName
	    FROM Airports AS a
	    JOIN FlightDestinations AS f ON a.Id = f.AirportId
	    JOIN Passengers AS p ON f.PassengerId = p.Id
      JOIN Aircraft AS ai ON f.AircraftId = ai.Id
	    JOIN AircraftTypes AS [at] ON ai.TypeId = [at].Id
	   WHERE a.AirportName = @airportName
	ORDER BY ai.Manufacturer, p.FullName
END
