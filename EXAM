CREATE DATABASE Zoo

GO

USE Zoo

GO

--Problem 1
CREATE TABLE Owners(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	PhoneNumber VARCHAR(15) NOT NULL,
	[Address] VARCHAR(50)
)

CREATE TABLE AnimalTypes(
	Id INT PRIMARY KEY IDENTITY,
	AnimalType VARCHAR(30) NOT NULL
)

CREATE TABLE Cages(
	Id INT PRIMARY KEY IDENTITY,
	AnimalTypeId INT NOT NULL FOREIGN KEY REFERENCES AnimalTypes(Id)
)

CREATE TABLE Animals(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(30) NOT NULL,
	BirthDate DATE NOT NULL,
	OwnerId INT FOREIGN KEY REFERENCES Owners(Id),
	AnimalTypeId INT NOT NULL FOREIGN KEY REFERENCES AnimalTypes(Id)
)

CREATE TABLE AnimalsCages(
	CageId INT NOT NULL FOREIGN KEY REFERENCES Cages(Id),
	AnimalId INT NOT NULL FOREIGN KEY REFERENCES Animals(Id),
	PRIMARY KEY(CageId, AnimalId)
)

CREATE TABLE VolunteersDepartments(
	Id INT PRIMARY KEY IDENTITY,
	DepartmentName VARCHAR(30) NOT NULL
)

CREATE TABLE Volunteers(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	PhoneNumber VARCHAR(15) NOT NULL,
	[Address] VARCHAR(50),
	AnimalId INT FOREIGN KEY REFERENCES Animals(Id),
	DepartmentId INT NOT NULL FOREIGN KEY REFERENCES VolunteersDepartments(Id)
)

--Problem 2
INSERT INTO Volunteers([Name], PhoneNumber, [Address], AnimalId, DepartmentId)
VALUES
('Anita Kostova', '0896365412', 'Sofia, 5 Rosa str.', 15, 1),
('Dimitur Stoev', '0877564223', null, 42, 4),
('Kalina Evtimova', '0896321112', 'Silistra, 21 Breza str.', 9, 7),
('Stoyan Tomov', '0898564100', 'Montana, 1 Bor str.', 18, 8),
('Boryana Mileva', '0888112233', null, 31, 5)

INSERT INTO Animals([Name], BirthDate, OwnerId, AnimalTypeId)
VALUES
('Giraffe', '2018-09-21', 21, 1),
('Harpy Eagle', '2015-04-17', 15, 3),
('Hamadryas Baboon', '2017-11-02', null, 1),
('Tuatara', '2021-06-30', 2, 4)

--Problem 3
UPDATE Animals
   SET OwnerId = (
                  SELECT Id
                   FROM Owners
                  WHERE [Name] = 'Kaloqn Stoqnov'
                 )
 WHERE OwnerId IS NULL

--Problem 4
DELETE FROM Volunteers 
      WHERE DepartmentId = (
	                         SELECT Id
							   FROM VolunteersDepartments 
							  WHERE DepartmentName = 'Education program assistant'
						   )

DELETE FROM VolunteersDepartments
	  WHERE DepartmentName = 'Education program assistant'

--Problem 5
  SELECT [Name],
         PhoneNumber,
		 [Address],
		 AnimalId,
		 DepartmentId
    FROM Volunteers 
ORDER BY [Name], AnimalId, DepartmentId

--Problem 6
  SELECT a.[Name],
         t.AnimalType,
	     FORMAT(a.BirthDate, 'dd.MM.yyyy') AS BirthDate
    FROM Animals AS a
    JOIN AnimalTypes AS t ON a.AnimalTypeId = t.Id
ORDER BY a.Name

--Problem 7
SELECT TOP(5) o.[Name],
              COUNT(a.Id) AS CountOfAnimals
         FROM Owners AS o
         JOIN Animals AS a ON o.Id = a.OwnerId
     GROUP BY o.[Name]
     ORDER BY CountOfAnimals DESC, o.[Name]

--Problem 8
  SELECT CONCAT(o.[Name], '-', a.[Name]) AS OwnersAnimals,
         o.PhoneNumber,
		 c.Id
    FROM Owners AS o
    JOIN Animals AS a ON o.Id = a.OwnerId
    JOIN AnimalsCages AS ac ON a.Id = ac.AnimalId
    JOIN Cages AS c ON ac.CageId = c.Id
	JOIN AnimalTypes AS an ON a.AnimalTypeId = an.Id
   WHERE an.AnimalType = 'Mammals'
ORDER BY o.[Name], a.[Name] DESC

--Problem 9
  SELECT v.[Name],
         v.PhoneNumber,
	     SUBSTRING(v.[Address], CHARINDEX(', ', v.[Address]) + LEN(', '), LEN(v.[Address]))
    FROM Volunteers AS v
    JOIN VolunteersDepartments AS vd ON v.DepartmentId = vd.Id
   WHERE vd.DepartmentName = 'Education program assistant' AND v.[Address] LIKE '%Sofia%'
ORDER BY v.[Name]

--Problem 10
  SELECT a.[Name],
         FORMAT(a.BirthDate, 'yyyy') AS BirthYear,
		 an.AnimalType
    FROM Animals AS a
    JOIN AnimalTypes AS an ON a.AnimalTypeId = an.Id
   WHERE an.AnimalType != 'Birds' AND (a.OwnerId IS NULL AND a.BirthDate > (select dateadd(week, -245, getdate())))
ORDER BY a.[Name]

GO

--Problem 11
CREATE FUNCTION udf_GetVolunteersCountFromADepartment (@volunteersDepartment VARCHAR(30)) 
RETURNS INT
AS
BEGIN
	DECLARE @numberOfVolunteers INT = (
	                                   SELECT COUNT(v.Id)
								         FROM VolunteersDepartments AS vd
								         JOIN Volunteers AS v ON vd.Id = v.DepartmentId
								        WHERE vd.DepartmentName = @volunteersDepartment
	                                  )

	RETURN @numberOfVolunteers
END

GO

--Problem 12
CREATE PROC usp_AnimalsWithOwnersOrNot @animalName VARCHAR(30)
AS
BEGIN
	   SELECT a.[Name],
	          CASE 
			  WHEN a.OwnerId IS NULL THEN 'For adoption'
			  WHEN a.OwnerId IS NOT NULL THEN o.[Name]
			  END AS OwnersName
	     FROM Animals AS a
    LEFT JOIN Owners AS o ON a.OwnerId = o.Id
	    WHERE a.[Name] = @animalName
END
